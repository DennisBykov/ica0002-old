- name: install mysql
  apt:
    name: mysql-server
    state: present

- name: ensure service is started
  service:
    name: mysql 
    state: started
    enabled: yes

- name: Mysql config
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart mysql

- name: install python3-pymysql
  ansible.builtin.apt:
    name: python3-pymysql
    state: latest

- name: Create a new mysql database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: add mysql user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create user exporter
  community.mysql.mysql_user:
    name: exporter
    password: "{{mysql_exporter_pass}}"
    priv:
      '*.*': 'PROCESS,REPLICATION CLIENT,SELECT'
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  
- name: MySQL replication user
  community.mysql.mysql_user:
    name: "{{ replication_user }}"
    password: "{{ grafana_pass }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
  no_log: true

- name: READONLY mode ON
  community.mysql.mysql_variables:
    variable: read_only
    value: 'ON'
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname != mysql_host
  notify:
    - MySQL replica
    - MySQL source
  tags: so

- name: READONLY mode OFF
  community.mysql.mysql_variables:
    variable: read_only
    value: 'OFF'
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname == mysql_host
  notify:
    - MySQL replica
    - MySQL source
  tags: so



















